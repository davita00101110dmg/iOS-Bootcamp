//
//  HomeInteractor.swift
//  DavitiKhvedelidzeHW28
//
//  Created by Dato Khvedelidze on 30.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func getCountryWeather(request: Home.GetCountryWeather.Request)
}

protocol HomeDataStore {
    var selectedCountry: City? { get }
}

class HomeInteractor: HomeDataStore {
    // MARK: - Clean Components
    
    private let presenter: HomePresentationLogic
    private var worker: HomeWorkerLogic
    
    private(set) var selectedCountry: City?
    
    // MARK: - Object Lifecycle
    
    init(presenter: HomePresentationLogic, worker: HomeWorkerLogic) {
        self.presenter = presenter
        self.worker = worker
    }
    
}
// MARK: - HomeBusinessLogic

extension HomeInteractor: HomeBusinessLogic {
    func getCountryWeather(request: Home.GetCountryWeather.Request) {
        Task {
            do {
                let countryWeather = try await worker.fetchCountryWeather(countryName: request.countryName)
                DispatchQueue.main.async { [weak self] in
                    self?.selectedCountry = countryWeather
                }
            }
        }
    }
}
